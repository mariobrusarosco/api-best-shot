name: Deploy to Staging

on:
  push:
    branches: [ staging ]

env:
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  deploy-staging:
    name: Deploy to Railway Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'
      
      - name: Enable Corepack
        run: corepack enable
      
      - name: Install Yarn
        run: corepack prepare yarn@3.8.7 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run quality gates
        run: |
          yarn lint
          yarn compile
          yarn test

      - name: Build application
        run: yarn build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN_STAGING }}

      - name: Install Railway CLI
        run: yarn dlx @railway/cli --version

      - name: Deploy to Railway Staging
        run: yarn dlx @railway/cli up --service api-best-shot
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_STAGING }}

      - name: Run database migrations on Supabase
        run: yarn db:migrate
        env:
          DB_STRING_CONNECTION: postgresql://postgres.mxevncnpdmrlnwksrazx:${{ secrets.STAGING_DB_PASSWORD }}@aws-1-us-east-2.pooler.supabase.com:6543/postgres

      # Temporarily disabled for first deployment - re-enable after service is running
      # - name: Health check
      #   run: |
      #     # Wait for deployment
      #     sleep 30
      #     
      #     # Get the staging URL (you'll need to replace this with your actual staging URL)
      #     STAGING_URL="https://your-staging-service.railway.app"
      #     
      #     # Health check with retry and proper exit handling
      #     SUCCESS=false
      #     for i in {1..5}; do
      #       echo "Staging health check attempt $i..."
      #       if curl -f "$STAGING_URL/api/v1/admin/health"; then
      #         echo "‚úÖ Staging deployment healthy!"
      #         SUCCESS=true
      #         break
      #       else
      #         echo "‚ùå Staging health check failed, retrying in 10s..."
      #         if [ $i -lt 5 ]; then
      #           sleep 10
      #         fi
      #       fi
      #     done
      #     
      #     # Fail the job if health check never succeeded
      #     if [ "$SUCCESS" != "true" ]; then
      #       echo "‚ùå Health check failed after 5 attempts. Deployment failed!"
      #       exit 1
      #     fi

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          fields: repo,message,commit,author
          text: |
            üöÄ **Staging Deployment**
            Status: ${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}
            Branch: staging
            Environment: Staging
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_STAGING }}