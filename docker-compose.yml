services:
  env-setup:
    image: alpine:latest
    container_name: bestshot_env_setup
    volumes:
      - .:/app
    env_file:
      - .env
    entrypoint: [
      "sh",
      "-c",
      "chmod +x /app/scripts/*.sh && /app/scripts/check-docker.sh",
      "/app/scripts/setup-env.sh"
    ]
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: bestshot_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bestshot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]

  migrations:
    image: node:18
    volumes:
      - .:/app
    working_dir: /app
    entrypoint:
      - sh
      - -c
      - |
        chmod +x /app/scripts/*.sh
        /app/scripts/migrate.sh

    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  bestshot_network:
    driver: bridge 