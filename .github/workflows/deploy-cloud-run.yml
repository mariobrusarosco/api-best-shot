name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: api-best-shot-demo

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Yarn 3
        run: corepack enable && corepack prepare yarn@3.8.7 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Type check
        run: yarn compile

      - name: Test build
        run: yarn build

      - name: Configure Docker for gcr.io
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: |
          docker build -t gcr.io/api-best-shot-demo/api-best-shot-demo:${{ github.sha }} .

      - name: Push Docker image to GCR
        run: |
          docker push gcr.io/api-best-shot-demo/api-best-shot-demo:${{ github.sha }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: api-best-shot-demo
          image: gcr.io/api-best-shot-demo/api-best-shot-demo:${{ github.sha }}
          region: us-central1
          env_vars: NODE_ENV=demo,DB_STRING_CONNECTION=${{ secrets.DB_STRING_CONNECTION }},JWT_SECRET=${{ secrets.JWT_SECRET }},ACCESS_CONTROL_ALLOW_ORIGIN=${{ secrets.ACCESS_CONTROL_ALLOW_ORIGIN }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }},AWS_CLOUDFRONT_URL=${{ secrets.AWS_CLOUDFRONT_URL }},SENTRY_DSN=${{ secrets.SENTRY_DSN }},ADMIN_TOKEN=${{ secrets.ADMIN_TOKEN }},MEMBER_PUBLIC_ID_COOKIE=${{ secrets.MEMBER_PUBLIC_ID_COOKIE }}
          env_vars_update_strategy: overwrite
