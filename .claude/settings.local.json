{
  "permissions": {
    "allow": [
      "Bash(yarn install)",
      "Bash(gcloud:*)",
      "Bash(curl:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(yarn add:*)",
      "Bash(yarn compile)",
      "Bash(pkill:*)",
      "Bash(yarn why:*)",
      "Bash(yarn install:*)",
      "Bash(yarn --version)",
      "Bash(rm:*)",
      "Bash(docker build:*)",
      "Bash(yarn build)",
      "Bash(yarn dev:status:*)",
      "Bash(yarn dev)",
      "Bash(git checkout:*)",
      "WebFetch(domain:github.com)",
      "Bash(npx:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "WebFetch(domain:cloud.google.com)",
      "WebFetch(domain:blog.truaro.dev)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:docs.github.com)",
      "Bash(yarn lint)",
      "Bash(yarn lint:fix:*)",
      "Bash(mkdir:*)",
      "Bash(yarn db:generate:*)",
      "Bash(yarn db:migrate:*)",
      "Bash(yarn tsc:*)",
      "Bash(node test-scheduler.js)",
      "Bash(grep:*)",
      "Bash(node:*)",
      "Bash(ls:*)",
      "Bash(timeout 10s yarn dev)",
      "Bash(aws scheduler list-schedules:*)",
      "Bash(aws scheduler list-schedule-groups:*)",
      "Bash(aws sts:*)",
      "Bash(aws lambda list-functions:*)",
      "Bash(aws iam list-roles:*)",
      "Bash(aws scheduler create-schedule-group:*)",
      "Bash(aws iam create-role:*)",
      "Bash(aws iam create-policy:*)",
      "Bash(aws iam attach-role-policy:*)",
      "Bash(aws lambda publish-layer-version:*)",
      "Bash(zip:*)",
      "Bash(tar:*)",
      "Bash(python3:*)",
      "Bash(aws lambda create-function:*)",
      "Bash(aws iam update-assume-role-policy:*)",
      "Bash(aws lambda update-function-configuration:*)",
      "Bash(env)",
      "Bash(aws logs describe-log-streams:*)",
      "Bash(aws scheduler get-schedule:*)",
      "Bash(aws configure:*)",
      "Bash(aws configure set:*)",
      "Bash(aws iam get-role:*)",
      "Bash(aws lambda get-function:*)",
      "Bash(chmod:*)",
      "Bash(/home/mario/coding/api-best-shot/scripts/deploy-lambdas.sh:*)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(aws logs get-log-events:*)",
      "Bash(git push:*)",
      "Bash(aws scheduler:*)",
      "Bash(--name \"daily-update-demo\" )",
      "Bash(--group-name \"daily-update\" )",
      "Bash(--schedule-expression \"cron(1 0 * * ? *)\" )",
      "Bash(--schedule-expression-timezone \"UTC\" )",
      "Bash(--flexible-time-window Mode=OFF )",
      "Bash(--target '{\n    \"\"Arn\"\": \"\"arn:aws:lambda:us-east-1:905418297381:function:caller-daily-routine\"\",\n    \"\"Input\"\": \"\"{\\\"\"targetEnv\\\"\": \\\"\"demo\\\"\", \\\"\"endpoint\\\"\": \\\"\"https://api-best-shot-demo.mariobrusarosco.com/api/v2/data-provider/scheduler\\\"\"}\"\",\n    \"\"RoleArn\"\": \"\"arn:aws:iam::905418297381:role/service-role/daily_scheduler\"\",\n    \"\"RetryPolicy\"\": {\n      \"\"MaximumRetryAttempts\"\": 3,\n      \"\"MaximumEventAgeInSeconds\"\": 3600\n    },\n    \"\"DeadLetterConfig\"\": {\n      \"\"Arn\"\": \"\"arn:aws:sqs:us-east-1:905418297381:best-shot-schedules\"\"\n    }\n  }' )",
      "Bash(--region us-east-1)",
      "Bash(mv:*)",
      "Bash(yarn format)",
      "Bash(yarn db:studio:*)",
      "Bash(yarn db:connect:*)",
      "Bash(docker compose exec:*)",
      "Bash(yarn lint:*)",
      "Bash(yarn prepare)",
      "WebFetch(domain:orm.drizzle.team)",
      "WebFetch(domain:productionresultssa12.blob.core.windows.net)",
      "Bash(./scripts/validate-secrets.sh:*)",
      "Bash(./scripts/validate-gcp-setup.sh:*)",
      "Bash(git rev-parse:*)",
      "WebFetch(domain:productionresultssa16.blob.core.windows.net)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:medium.com)",
      "Bash(cat:*)",
      "Bash(yarn test:*)",
      "Bash(docker compose:*)",
      "Bash(sudo docker compose:*)",
      "WebSearch",
      "WebFetch(domain:prettier.io)",
      "WebFetch(domain:productionresultssa6.blob.core.windows.net)",
      "Bash(npm install:*)",
      "Bash(/usr/local/bin/yarn --version)",
      "Bash(volta list:*)",
      "Bash(yarn set version:*)",
      "WebFetch(domain:docs.railway.app)",
      "WebFetch(domain:docs.railway.com)",
      "WebFetch(domain:blog.railway.com)",
      "WebFetch(domain:productionresultssa10.blob.core.windows.net)",
      "Bash(yarn:*)"
    ],
    "deny": []
  }
}