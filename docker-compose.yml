services:
  initial_setup:
    image: alpine:3.18
    container_name: bestshot_initial_setup
    volumes:
      - .:/app
    working_dir: /app/scripts/setup
    command: >
      sh -c '
        apk add --no-cache postgresql-client &&
        chmod +x main.sh &&
        ./main.sh "initial"
      '
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bestshot_network
    profiles:
      - initial
    tty: true
    stdin_open: true

  update_setup:
    image: alpine:3.18
    container_name: bestshot_update_setup
    volumes:
      - .:/app
    working_dir: /app/scripts/setup
    command: >
      sh -c '
        apk add --no-cache postgresql-client &&
        chmod +x main.sh &&
        ./main.sh "update"
      '
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bestshot_network
    profiles:
      - update
    tty: true
    stdin_open: true

  postgres:
    image: postgres:15
    container_name: bestshot_db
    environment:
      DB_USER: ${DB_USER:-dev_user}
      DB_PASSWORD: ${DB_PASSWORD:-dev_pass}
      DB_NAME: ${DB_NAME:-bestshot_dev}
      DB_PORT: ${DB_PORT:-5432}
      POSTGRES_USER: ${DB_USER:-dev_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_pass}
      POSTGRES_DB: ${DB_NAME:-bestshot_dev}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bestshot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dev_user} -d ${DB_NAME:-bestshot_dev}"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - initial
      - update

volumes:
  postgres_data:

networks:
  bestshot_network:
    driver: bridge
